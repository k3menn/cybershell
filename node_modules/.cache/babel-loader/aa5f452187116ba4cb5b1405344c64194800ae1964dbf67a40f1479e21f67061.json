{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrkemenov/programming/test-cursor-website/src/contexts/TelegramContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserData } from '../store/slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelegramContext = /*#__PURE__*/createContext({\n  webApp: null,\n  user: null\n});\nexport const TelegramProvider = ({\n  children\n}) => {\n  _s();\n  const [webApp, setWebApp] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const tg = window.Telegram.WebApp;\n    setWebApp(tg);\n    tg.ready();\n\n    // Set user data from Telegram\n    if (tg.initDataUnsafe.user) {\n      dispatch(setUserData({\n        telegramId: tg.initDataUnsafe.user.id.toString(),\n        isAuthenticated: true\n      }));\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(TelegramContext.Provider, {\n    value: {\n      webApp,\n      user: (webApp === null || webApp === void 0 ? void 0 : webApp.initDataUnsafe.user) || null\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TelegramProvider, \"5jp7ROgfzDfLZv8F41qI7oB+1kg=\", false, function () {\n  return [useDispatch];\n});\n_c = TelegramProvider;\nexport const useTelegram = () => {\n  _s2();\n  return useContext(TelegramContext);\n};\n_s2(useTelegram, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TelegramProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useDispatch","setUserData","jsxDEV","_jsxDEV","TelegramContext","webApp","user","TelegramProvider","children","_s","setWebApp","dispatch","tg","window","Telegram","WebApp","ready","initDataUnsafe","telegramId","id","toString","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTelegram","_s2","$RefreshReg$"],"sources":["/Users/aleksandrkemenov/programming/test-cursor-website/src/contexts/TelegramContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserData } from '../store/slices/authSlice';\n\ndeclare global {\n  interface Window {\n    Telegram: {\n      WebApp: {\n        ready(): void;\n        close(): void;\n        expand(): void;\n        MainButton: {\n          text: string;\n          show(): void;\n          hide(): void;\n          onClick(fn: () => void): void;\n        };\n        initDataUnsafe: {\n          user?: {\n            id: number;\n            username?: string;\n          };\n        };\n      };\n    };\n  }\n}\n\ninterface TelegramContextType {\n  webApp: typeof window.Telegram.WebApp | null;\n  user: {\n    id: number;\n    username?: string;\n  } | null;\n}\n\nconst TelegramContext = createContext<TelegramContextType>({\n  webApp: null,\n  user: null,\n});\n\nexport const TelegramProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [webApp, setWebApp] = useState<typeof window.Telegram.WebApp | null>(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const tg = window.Telegram.WebApp;\n    setWebApp(tg);\n    tg.ready();\n\n    // Set user data from Telegram\n    if (tg.initDataUnsafe.user) {\n      dispatch(setUserData({\n        telegramId: tg.initDataUnsafe.user.id.toString(),\n        isAuthenticated: true,\n      }));\n    }\n  }, [dispatch]);\n\n  return (\n    <TelegramContext.Provider value={{ webApp, user: webApp?.initDataUnsafe.user || null }}>\n      {children}\n    </TelegramContext.Provider>\n  );\n};\n\nexport const useTelegram = () => useContext(TelegramContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkCxD,MAAMC,eAAe,gBAAGR,aAAa,CAAsB;EACzDS,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACJ,MAAM,EAAEK,SAAS,CAAC,GAAGX,QAAQ,CAAuC,IAAI,CAAC;EAChF,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMc,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;IACjCL,SAAS,CAACE,EAAE,CAAC;IACbA,EAAE,CAACI,KAAK,CAAC,CAAC;;IAEV;IACA,IAAIJ,EAAE,CAACK,cAAc,CAACX,IAAI,EAAE;MAC1BK,QAAQ,CAACV,WAAW,CAAC;QACnBiB,UAAU,EAAEN,EAAE,CAACK,cAAc,CAACX,IAAI,CAACa,EAAE,CAACC,QAAQ,CAAC,CAAC;QAChDC,eAAe,EAAE;MACnB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAACC,eAAe,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAElB,MAAM;MAAEC,IAAI,EAAE,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEY,cAAc,CAACX,IAAI,KAAI;IAAK,CAAE;IAAAE,QAAA,EACpFA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAClB,EAAA,CAvBWF,gBAAyD;EAAA,QAEnDP,WAAW;AAAA;AAAA4B,EAAA,GAFjBrB,gBAAyD;AAyBtE,OAAO,MAAMsB,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACO,eAAe,CAAC;AAAA;AAAC0B,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}