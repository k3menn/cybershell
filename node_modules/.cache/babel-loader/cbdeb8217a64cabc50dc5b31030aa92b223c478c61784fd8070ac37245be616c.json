{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrkemenov/programming/test-cursor-website/src/contexts/TelegramContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserData } from '../store/slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelegramContext = /*#__PURE__*/createContext({\n  webApp: null,\n  user: null\n});\nexport const TelegramProvider = ({\n  children\n}) => {\n  _s();\n  const [webApp, setWebApp] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      const tg = window.Telegram.WebApp;\n      if (!tg) {\n        console.error('Telegram WebApp is not available');\n        return;\n      }\n      setWebApp(tg);\n      tg.ready();\n\n      // Expand to full height\n      tg.expand();\n      if (tg.initDataUnsafe.user) {\n        dispatch(setUserData({\n          telegramId: tg.initDataUnsafe.user.id.toString(),\n          isAuthenticated: true\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to initialize Telegram WebApp:', error);\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(TelegramContext.Provider, {\n    value: {\n      webApp,\n      user: (webApp === null || webApp === void 0 ? void 0 : webApp.initDataUnsafe.user) || null\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(TelegramProvider, \"5jp7ROgfzDfLZv8F41qI7oB+1kg=\", false, function () {\n  return [useDispatch];\n});\n_c = TelegramProvider;\nexport const useTelegram = () => {\n  _s2();\n  return useContext(TelegramContext);\n};\n_s2(useTelegram, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TelegramProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useDispatch","setUserData","jsxDEV","_jsxDEV","TelegramContext","webApp","user","TelegramProvider","children","_s","setWebApp","dispatch","tg","window","Telegram","WebApp","console","error","ready","expand","initDataUnsafe","telegramId","id","toString","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTelegram","_s2","$RefreshReg$"],"sources":["/Users/aleksandrkemenov/programming/test-cursor-website/src/contexts/TelegramContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserData } from '../store/slices/authSlice';\n\ndeclare global {\n  interface Window {\n    Telegram: {\n      WebApp: {\n        ready(): void;\n        close(): void;\n        expand(): void;\n        BackButton: {\n          show(): void;\n          hide(): void;\n          onClick(fn: () => void): void;\n          isVisible: boolean;\n        };\n        MainButton: {\n          text: string;\n          show(): void;\n          hide(): void;\n          onClick(fn: () => void): void;\n        };\n        initDataUnsafe: {\n          user?: {\n            id: number;\n            username?: string;\n          };\n        };\n        themeParams: {\n          bg_color: string;\n          text_color: string;\n          hint_color: string;\n          button_color: string;\n          button_text_color: string;\n        };\n      };\n    };\n  }\n}\n\ninterface TelegramContextType {\n  webApp: typeof window.Telegram.WebApp | null;\n  user: {\n    id: number;\n    username?: string;\n  } | null;\n}\n\nconst TelegramContext = createContext<TelegramContextType>({\n  webApp: null,\n  user: null,\n});\n\nexport const TelegramProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [webApp, setWebApp] = useState<typeof window.Telegram.WebApp | null>(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      const tg = window.Telegram.WebApp;\n      if (!tg) {\n        console.error('Telegram WebApp is not available');\n        return;\n      }\n      setWebApp(tg);\n      tg.ready();\n      \n      // Expand to full height\n      tg.expand();\n\n      if (tg.initDataUnsafe.user) {\n        dispatch(setUserData({\n          telegramId: tg.initDataUnsafe.user.id.toString(),\n          isAuthenticated: true,\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to initialize Telegram WebApp:', error);\n    }\n  }, [dispatch]);\n\n  return (\n    <TelegramContext.Provider value={{ webApp, user: webApp?.initDataUnsafe.user || null }}>\n      {children}\n    </TelegramContext.Provider>\n  );\n};\n\nexport const useTelegram = () => useContext(TelegramContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA+CxD,MAAMC,eAAe,gBAAGR,aAAa,CAAsB;EACzDS,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACJ,MAAM,EAAEK,SAAS,CAAC,GAAGX,QAAQ,CAAuC,IAAI,CAAC;EAChF,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMc,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;MACjC,IAAI,CAACH,EAAE,EAAE;QACPI,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;QACjD;MACF;MACAP,SAAS,CAACE,EAAE,CAAC;MACbA,EAAE,CAACM,KAAK,CAAC,CAAC;;MAEV;MACAN,EAAE,CAACO,MAAM,CAAC,CAAC;MAEX,IAAIP,EAAE,CAACQ,cAAc,CAACd,IAAI,EAAE;QAC1BK,QAAQ,CAACV,WAAW,CAAC;UACnBoB,UAAU,EAAET,EAAE,CAACQ,cAAc,CAACd,IAAI,CAACgB,EAAE,CAACC,QAAQ,CAAC,CAAC;UAChDC,eAAe,EAAE;QACnB,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAACC,eAAe,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAErB,MAAM;MAAEC,IAAI,EAAE,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEe,cAAc,CAACd,IAAI,KAAI;IAAK,CAAE;IAAAE,QAAA,EACpFA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACrB,EAAA,CAjCWF,gBAAyD;EAAA,QAEnDP,WAAW;AAAA;AAAA+B,EAAA,GAFjBxB,gBAAyD;AAmCtE,OAAO,MAAMyB,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACO,eAAe,CAAC;AAAA;AAAC6B,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}